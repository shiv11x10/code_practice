-----------------------------------------------------------------------------------------------------------------------
You are given two sequences A1,A2,…,AN and B1,B2,…,BN. 
You should choose a permutation P1,P2,…,PN of the integers 1 through N and construct N rectangles with dimensions 
A1×BP1,A2×BP2,…,AN×BPN. Then, for each of these rectangles, you should construct an inscribed circle, i.e. 
a circle with the maximum possible area that is completely contained in that rectangle.

Let S be the sum of diameters of these N circles. Your task is to find the maximum value of S.
------------------------------------------------------------------------------------------------------------------------

#include<bits/stdc++.h>
#include<algorithm>
using namespace std;

//#define ll long long

int main()
{
    ios_base :: sync_with_stdio(false);
    cin.tie(NULL);
    
   int t;
   cin>>t;
   
   while(t--) {
   	
   	int sum =0;
   	
   	int n;
   	cin>>n;
   	
   	int a[n], b[n];
	      	
   	for(int i=0; i<n;i++){
   		cin>>a[i];
	   }
	   
	for(int i=0; i<n;i++){
   		cin>>b[i];
	   }
	   
	sort(a, a+n);
	sort(b, b+n);
	
	for(int i=0; i<n;i++){
		if(a[i]>b[i]){
			sum += b[i];
		}
		else {
			sum += a[i];
		}
	}
		   
	 cout<<sum<<"\n";  
   	
   }
   
    return 0;
}
